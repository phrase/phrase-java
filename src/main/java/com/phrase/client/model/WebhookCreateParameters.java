/*
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.phrase.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * WebhookCreateParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-14T10:03:32.698347Z[Etc/UTC]")
public class WebhookCreateParameters {
  public static final String SERIALIZED_NAME_CALLBACK_URL = "callback_url";
  @SerializedName(SERIALIZED_NAME_CALLBACK_URL)
  private String callbackUrl;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private String secret;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EVENTS = "events";
  @SerializedName(SERIALIZED_NAME_EVENTS)
  private String events;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_INCLUDE_BRANCHES = "include_branches";
  @SerializedName(SERIALIZED_NAME_INCLUDE_BRANCHES)
  private Boolean includeBranches;

  public WebhookCreateParameters() {
  }

  public WebhookCreateParameters callbackUrl(String callbackUrl) {
    
    this.callbackUrl = callbackUrl;
    return this;
  }

   /**
   * Callback URL to send requests to
   * @return callbackUrl
  **/
  @javax.annotation.Nullable

  public String getCallbackUrl() {
    return callbackUrl;
  }


  public void setCallbackUrl(String callbackUrl) {
    this.callbackUrl = callbackUrl;
  }


  public WebhookCreateParameters secret(String secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Webhook secret used to calculate signature. If empty, the default project secret will be used.
   * @return secret
  **/
  @javax.annotation.Nullable

  public String getSecret() {
    return secret;
  }


  public void setSecret(String secret) {
    this.secret = secret;
  }


  public WebhookCreateParameters description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Webhook description
   * @return description
  **/
  @javax.annotation.Nullable

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public WebhookCreateParameters events(String events) {
    
    this.events = events;
    return this;
  }

   /**
   * List of event names to trigger the webhook (separated by comma)
   * @return events
  **/
  @javax.annotation.Nullable

  public String getEvents() {
    return events;
  }


  public void setEvents(String events) {
    this.events = events;
  }


  public WebhookCreateParameters active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Whether webhook is active or inactive
   * @return active
  **/
  @javax.annotation.Nullable

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public WebhookCreateParameters includeBranches(Boolean includeBranches) {
    
    this.includeBranches = includeBranches;
    return this;
  }

   /**
   * If enabled, webhook will also be triggered for events from branches of the project specified.
   * @return includeBranches
  **/
  @javax.annotation.Nullable

  public Boolean getIncludeBranches() {
    return includeBranches;
  }


  public void setIncludeBranches(Boolean includeBranches) {
    this.includeBranches = includeBranches;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookCreateParameters webhookCreateParameters = (WebhookCreateParameters) o;
    return Objects.equals(this.callbackUrl, webhookCreateParameters.callbackUrl) &&
        Objects.equals(this.secret, webhookCreateParameters.secret) &&
        Objects.equals(this.description, webhookCreateParameters.description) &&
        Objects.equals(this.events, webhookCreateParameters.events) &&
        Objects.equals(this.active, webhookCreateParameters.active) &&
        Objects.equals(this.includeBranches, webhookCreateParameters.includeBranches);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callbackUrl, secret, description, events, active, includeBranches);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookCreateParameters {\n");
    sb.append("    callbackUrl: ").append(toIndentedString(callbackUrl)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    includeBranches: ").append(toIndentedString(includeBranches)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


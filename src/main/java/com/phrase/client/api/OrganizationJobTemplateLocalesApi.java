/*
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.phrase.client.api;

import com.phrase.client.ApiCallback;
import com.phrase.client.ApiClient;
import com.phrase.client.ApiException;
import com.phrase.client.ApiResponse;
import com.phrase.client.Configuration;
import com.phrase.client.Pair;
import com.phrase.client.ProgressRequestBody;
import com.phrase.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.phrase.client.model.JobTemplateLocales;
import com.phrase.client.model.OrganizationJobTemplateLocaleUpdateParameters;
import com.phrase.client.model.OrganizationJobTemplateLocalesCreateParameters;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrganizationJobTemplateLocalesApi {
    private ApiClient localVarApiClient;

    public OrganizationJobTemplateLocalesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OrganizationJobTemplateLocalesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for organizationJobTemplateLocaleDelete
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call organizationJobTemplateLocaleDeleteCall(String accountId, String jobTemplateId, String jobTemplateLocaleId, String xPhraseAppOTP, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/job_templates/{job_template_id}/locales/{job_template_locale_id}"
            .replaceAll("\\{" + "account_id" + "\\}", localVarApiClient.escapeString(accountId.toString()))
            .replaceAll("\\{" + "job_template_id" + "\\}", localVarApiClient.escapeString(jobTemplateId.toString()))
            .replaceAll("\\{" + "job_template_locale_id" + "\\}", localVarApiClient.escapeString(jobTemplateLocaleId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xPhraseAppOTP != null) {
            localVarHeaderParams.put("X-PhraseApp-OTP", localVarApiClient.parameterToString(xPhraseAppOTP));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Basic", "Token" };
        return localVarApiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call organizationJobTemplateLocaleDeleteValidateBeforeCall(String accountId, String jobTemplateId, String jobTemplateLocaleId, String xPhraseAppOTP, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling organizationJobTemplateLocaleDelete(Async)");
        }
        
        // verify the required parameter 'jobTemplateId' is set
        if (jobTemplateId == null) {
            throw new ApiException("Missing the required parameter 'jobTemplateId' when calling organizationJobTemplateLocaleDelete(Async)");
        }
        
        // verify the required parameter 'jobTemplateLocaleId' is set
        if (jobTemplateLocaleId == null) {
            throw new ApiException("Missing the required parameter 'jobTemplateLocaleId' when calling organizationJobTemplateLocaleDelete(Async)");
        }
        

        okhttp3.Call localVarCall = organizationJobTemplateLocaleDeleteCall(accountId, jobTemplateId, jobTemplateLocaleId, xPhraseAppOTP, _callback);
        return localVarCall;

    }

    /**
     * Delete an organization job template locale
     * Delete an existing organization job template locale.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public void organizationJobTemplateLocaleDelete(String accountId, String jobTemplateId, String jobTemplateLocaleId, String xPhraseAppOTP) throws ApiException {
        organizationJobTemplateLocaleDeleteWithHttpInfo(accountId, jobTemplateId, jobTemplateLocaleId, xPhraseAppOTP);
    }

    /**
     * Delete an organization job template locale
     * Delete an existing organization job template locale.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<Void> organizationJobTemplateLocaleDeleteWithHttpInfo(String accountId, String jobTemplateId, String jobTemplateLocaleId, String xPhraseAppOTP) throws ApiException {
        okhttp3.Call localVarCall = organizationJobTemplateLocaleDeleteValidateBeforeCall(accountId, jobTemplateId, jobTemplateLocaleId, xPhraseAppOTP, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Delete an organization job template locale (asynchronously)
     * Delete an existing organization job template locale.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call organizationJobTemplateLocaleDeleteAsync(String accountId, String jobTemplateId, String jobTemplateLocaleId, String xPhraseAppOTP, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = organizationJobTemplateLocaleDeleteValidateBeforeCall(accountId, jobTemplateId, jobTemplateLocaleId, xPhraseAppOTP, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for organizationJobTemplateLocaleShow
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call organizationJobTemplateLocaleShowCall(String accountId, String jobTemplateId, String jobTemplateLocaleId, String xPhraseAppOTP, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/job_templates/{job_template_id}/locales/{job_template_locale_id}"
            .replaceAll("\\{" + "account_id" + "\\}", localVarApiClient.escapeString(accountId.toString()))
            .replaceAll("\\{" + "job_template_id" + "\\}", localVarApiClient.escapeString(jobTemplateId.toString()))
            .replaceAll("\\{" + "job_template_locale_id" + "\\}", localVarApiClient.escapeString(jobTemplateLocaleId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xPhraseAppOTP != null) {
            localVarHeaderParams.put("X-PhraseApp-OTP", localVarApiClient.parameterToString(xPhraseAppOTP));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Basic", "Token" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call organizationJobTemplateLocaleShowValidateBeforeCall(String accountId, String jobTemplateId, String jobTemplateLocaleId, String xPhraseAppOTP, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling organizationJobTemplateLocaleShow(Async)");
        }
        
        // verify the required parameter 'jobTemplateId' is set
        if (jobTemplateId == null) {
            throw new ApiException("Missing the required parameter 'jobTemplateId' when calling organizationJobTemplateLocaleShow(Async)");
        }
        
        // verify the required parameter 'jobTemplateLocaleId' is set
        if (jobTemplateLocaleId == null) {
            throw new ApiException("Missing the required parameter 'jobTemplateLocaleId' when calling organizationJobTemplateLocaleShow(Async)");
        }
        

        okhttp3.Call localVarCall = organizationJobTemplateLocaleShowCall(accountId, jobTemplateId, jobTemplateLocaleId, xPhraseAppOTP, _callback);
        return localVarCall;

    }

    /**
     * Get a single organization job template locale
     * Get a single job template locale for a given organization job template.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @return JobTemplateLocales
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public JobTemplateLocales organizationJobTemplateLocaleShow(String accountId, String jobTemplateId, String jobTemplateLocaleId, String xPhraseAppOTP) throws ApiException {
        ApiResponse<JobTemplateLocales> localVarResp = organizationJobTemplateLocaleShowWithHttpInfo(accountId, jobTemplateId, jobTemplateLocaleId, xPhraseAppOTP);
        return localVarResp.getData();
    }

    /**
     * Get a single organization job template locale
     * Get a single job template locale for a given organization job template.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @return ApiResponse&lt;JobTemplateLocales&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<JobTemplateLocales> organizationJobTemplateLocaleShowWithHttpInfo(String accountId, String jobTemplateId, String jobTemplateLocaleId, String xPhraseAppOTP) throws ApiException {
        okhttp3.Call localVarCall = organizationJobTemplateLocaleShowValidateBeforeCall(accountId, jobTemplateId, jobTemplateLocaleId, xPhraseAppOTP, null);
        Type localVarReturnType = new TypeToken<JobTemplateLocales>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a single organization job template locale (asynchronously)
     * Get a single job template locale for a given organization job template.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call organizationJobTemplateLocaleShowAsync(String accountId, String jobTemplateId, String jobTemplateLocaleId, String xPhraseAppOTP, final ApiCallback<JobTemplateLocales> _callback) throws ApiException {

        okhttp3.Call localVarCall = organizationJobTemplateLocaleShowValidateBeforeCall(accountId, jobTemplateId, jobTemplateLocaleId, xPhraseAppOTP, _callback);
        Type localVarReturnType = new TypeToken<JobTemplateLocales>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for organizationJobTemplateLocaleUpdate
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param organizationJobTemplateLocaleUpdateParameters  (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call organizationJobTemplateLocaleUpdateCall(String accountId, String jobTemplateId, String jobTemplateLocaleId, OrganizationJobTemplateLocaleUpdateParameters organizationJobTemplateLocaleUpdateParameters, String xPhraseAppOTP, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = organizationJobTemplateLocaleUpdateParameters;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/job_templates/{job_template_id}/locales/{job_template_locale_id}"
            .replaceAll("\\{" + "account_id" + "\\}", localVarApiClient.escapeString(accountId.toString()))
            .replaceAll("\\{" + "job_template_id" + "\\}", localVarApiClient.escapeString(jobTemplateId.toString()))
            .replaceAll("\\{" + "job_template_locale_id" + "\\}", localVarApiClient.escapeString(jobTemplateLocaleId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xPhraseAppOTP != null) {
            localVarHeaderParams.put("X-PhraseApp-OTP", localVarApiClient.parameterToString(xPhraseAppOTP));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Basic", "Token" };
        return localVarApiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call organizationJobTemplateLocaleUpdateValidateBeforeCall(String accountId, String jobTemplateId, String jobTemplateLocaleId, OrganizationJobTemplateLocaleUpdateParameters organizationJobTemplateLocaleUpdateParameters, String xPhraseAppOTP, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling organizationJobTemplateLocaleUpdate(Async)");
        }
        
        // verify the required parameter 'jobTemplateId' is set
        if (jobTemplateId == null) {
            throw new ApiException("Missing the required parameter 'jobTemplateId' when calling organizationJobTemplateLocaleUpdate(Async)");
        }
        
        // verify the required parameter 'jobTemplateLocaleId' is set
        if (jobTemplateLocaleId == null) {
            throw new ApiException("Missing the required parameter 'jobTemplateLocaleId' when calling organizationJobTemplateLocaleUpdate(Async)");
        }
        
        // verify the required parameter 'organizationJobTemplateLocaleUpdateParameters' is set
        if (organizationJobTemplateLocaleUpdateParameters == null) {
            throw new ApiException("Missing the required parameter 'organizationJobTemplateLocaleUpdateParameters' when calling organizationJobTemplateLocaleUpdate(Async)");
        }
        

        okhttp3.Call localVarCall = organizationJobTemplateLocaleUpdateCall(accountId, jobTemplateId, jobTemplateLocaleId, organizationJobTemplateLocaleUpdateParameters, xPhraseAppOTP, _callback);
        return localVarCall;

    }

    /**
     * Update an organization job template locale
     * Update an existing organization job template locale.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param organizationJobTemplateLocaleUpdateParameters  (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @return JobTemplateLocales
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public JobTemplateLocales organizationJobTemplateLocaleUpdate(String accountId, String jobTemplateId, String jobTemplateLocaleId, OrganizationJobTemplateLocaleUpdateParameters organizationJobTemplateLocaleUpdateParameters, String xPhraseAppOTP) throws ApiException {
        ApiResponse<JobTemplateLocales> localVarResp = organizationJobTemplateLocaleUpdateWithHttpInfo(accountId, jobTemplateId, jobTemplateLocaleId, organizationJobTemplateLocaleUpdateParameters, xPhraseAppOTP);
        return localVarResp.getData();
    }

    /**
     * Update an organization job template locale
     * Update an existing organization job template locale.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param organizationJobTemplateLocaleUpdateParameters  (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @return ApiResponse&lt;JobTemplateLocales&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<JobTemplateLocales> organizationJobTemplateLocaleUpdateWithHttpInfo(String accountId, String jobTemplateId, String jobTemplateLocaleId, OrganizationJobTemplateLocaleUpdateParameters organizationJobTemplateLocaleUpdateParameters, String xPhraseAppOTP) throws ApiException {
        okhttp3.Call localVarCall = organizationJobTemplateLocaleUpdateValidateBeforeCall(accountId, jobTemplateId, jobTemplateLocaleId, organizationJobTemplateLocaleUpdateParameters, xPhraseAppOTP, null);
        Type localVarReturnType = new TypeToken<JobTemplateLocales>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update an organization job template locale (asynchronously)
     * Update an existing organization job template locale.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param jobTemplateLocaleId Job Template Locale ID (required)
     * @param organizationJobTemplateLocaleUpdateParameters  (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call organizationJobTemplateLocaleUpdateAsync(String accountId, String jobTemplateId, String jobTemplateLocaleId, OrganizationJobTemplateLocaleUpdateParameters organizationJobTemplateLocaleUpdateParameters, String xPhraseAppOTP, final ApiCallback<JobTemplateLocales> _callback) throws ApiException {

        okhttp3.Call localVarCall = organizationJobTemplateLocaleUpdateValidateBeforeCall(accountId, jobTemplateId, jobTemplateLocaleId, organizationJobTemplateLocaleUpdateParameters, xPhraseAppOTP, _callback);
        Type localVarReturnType = new TypeToken<JobTemplateLocales>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for organizationJobTemplateLocalesCreate
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param organizationJobTemplateLocalesCreateParameters  (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call organizationJobTemplateLocalesCreateCall(String accountId, String jobTemplateId, OrganizationJobTemplateLocalesCreateParameters organizationJobTemplateLocalesCreateParameters, String xPhraseAppOTP, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = organizationJobTemplateLocalesCreateParameters;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/job_templates/{job_template_id}/locales"
            .replaceAll("\\{" + "account_id" + "\\}", localVarApiClient.escapeString(accountId.toString()))
            .replaceAll("\\{" + "job_template_id" + "\\}", localVarApiClient.escapeString(jobTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xPhraseAppOTP != null) {
            localVarHeaderParams.put("X-PhraseApp-OTP", localVarApiClient.parameterToString(xPhraseAppOTP));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Basic", "Token" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call organizationJobTemplateLocalesCreateValidateBeforeCall(String accountId, String jobTemplateId, OrganizationJobTemplateLocalesCreateParameters organizationJobTemplateLocalesCreateParameters, String xPhraseAppOTP, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling organizationJobTemplateLocalesCreate(Async)");
        }
        
        // verify the required parameter 'jobTemplateId' is set
        if (jobTemplateId == null) {
            throw new ApiException("Missing the required parameter 'jobTemplateId' when calling organizationJobTemplateLocalesCreate(Async)");
        }
        
        // verify the required parameter 'organizationJobTemplateLocalesCreateParameters' is set
        if (organizationJobTemplateLocalesCreateParameters == null) {
            throw new ApiException("Missing the required parameter 'organizationJobTemplateLocalesCreateParameters' when calling organizationJobTemplateLocalesCreate(Async)");
        }
        

        okhttp3.Call localVarCall = organizationJobTemplateLocalesCreateCall(accountId, jobTemplateId, organizationJobTemplateLocalesCreateParameters, xPhraseAppOTP, _callback);
        return localVarCall;

    }

    /**
     * Create an organization job template locale
     * Create a new organization job template locale.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param organizationJobTemplateLocalesCreateParameters  (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @return JobTemplateLocales
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public JobTemplateLocales organizationJobTemplateLocalesCreate(String accountId, String jobTemplateId, OrganizationJobTemplateLocalesCreateParameters organizationJobTemplateLocalesCreateParameters, String xPhraseAppOTP) throws ApiException {
        ApiResponse<JobTemplateLocales> localVarResp = organizationJobTemplateLocalesCreateWithHttpInfo(accountId, jobTemplateId, organizationJobTemplateLocalesCreateParameters, xPhraseAppOTP);
        return localVarResp.getData();
    }

    /**
     * Create an organization job template locale
     * Create a new organization job template locale.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param organizationJobTemplateLocalesCreateParameters  (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @return ApiResponse&lt;JobTemplateLocales&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<JobTemplateLocales> organizationJobTemplateLocalesCreateWithHttpInfo(String accountId, String jobTemplateId, OrganizationJobTemplateLocalesCreateParameters organizationJobTemplateLocalesCreateParameters, String xPhraseAppOTP) throws ApiException {
        okhttp3.Call localVarCall = organizationJobTemplateLocalesCreateValidateBeforeCall(accountId, jobTemplateId, organizationJobTemplateLocalesCreateParameters, xPhraseAppOTP, null);
        Type localVarReturnType = new TypeToken<JobTemplateLocales>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create an organization job template locale (asynchronously)
     * Create a new organization job template locale.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param organizationJobTemplateLocalesCreateParameters  (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call organizationJobTemplateLocalesCreateAsync(String accountId, String jobTemplateId, OrganizationJobTemplateLocalesCreateParameters organizationJobTemplateLocalesCreateParameters, String xPhraseAppOTP, final ApiCallback<JobTemplateLocales> _callback) throws ApiException {

        okhttp3.Call localVarCall = organizationJobTemplateLocalesCreateValidateBeforeCall(accountId, jobTemplateId, organizationJobTemplateLocalesCreateParameters, xPhraseAppOTP, _callback);
        Type localVarReturnType = new TypeToken<JobTemplateLocales>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for organizationJobTemplateLocalesList
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param page Page number (optional)
     * @param perPage Limit on the number of objects to be returned, between 1 and 100. 25 by default (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  * Link -  <br>  * Pagination -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call organizationJobTemplateLocalesListCall(String accountId, String jobTemplateId, String xPhraseAppOTP, Integer page, Integer perPage, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/job_templates/{job_template_id}/locales"
            .replaceAll("\\{" + "account_id" + "\\}", localVarApiClient.escapeString(accountId.toString()))
            .replaceAll("\\{" + "job_template_id" + "\\}", localVarApiClient.escapeString(jobTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_page", perPage));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xPhraseAppOTP != null) {
            localVarHeaderParams.put("X-PhraseApp-OTP", localVarApiClient.parameterToString(xPhraseAppOTP));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Basic", "Token" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call organizationJobTemplateLocalesListValidateBeforeCall(String accountId, String jobTemplateId, String xPhraseAppOTP, Integer page, Integer perPage, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling organizationJobTemplateLocalesList(Async)");
        }
        
        // verify the required parameter 'jobTemplateId' is set
        if (jobTemplateId == null) {
            throw new ApiException("Missing the required parameter 'jobTemplateId' when calling organizationJobTemplateLocalesList(Async)");
        }
        

        okhttp3.Call localVarCall = organizationJobTemplateLocalesListCall(accountId, jobTemplateId, xPhraseAppOTP, page, perPage, _callback);
        return localVarCall;

    }

    /**
     * List organization job template locales
     * List all job template locales for a given organization job template.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param page Page number (optional)
     * @param perPage Limit on the number of objects to be returned, between 1 and 100. 25 by default (optional)
     * @return List&lt;JobTemplateLocales&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  * Link -  <br>  * Pagination -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public List<JobTemplateLocales> organizationJobTemplateLocalesList(String accountId, String jobTemplateId, String xPhraseAppOTP, Integer page, Integer perPage) throws ApiException {
        ApiResponse<List<JobTemplateLocales>> localVarResp = organizationJobTemplateLocalesListWithHttpInfo(accountId, jobTemplateId, xPhraseAppOTP, page, perPage);
        return localVarResp.getData();
    }

    /**
     * List organization job template locales
     * List all job template locales for a given organization job template.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param page Page number (optional)
     * @param perPage Limit on the number of objects to be returned, between 1 and 100. 25 by default (optional)
     * @return ApiResponse&lt;List&lt;JobTemplateLocales&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  * Link -  <br>  * Pagination -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<List<JobTemplateLocales>> organizationJobTemplateLocalesListWithHttpInfo(String accountId, String jobTemplateId, String xPhraseAppOTP, Integer page, Integer perPage) throws ApiException {
        okhttp3.Call localVarCall = organizationJobTemplateLocalesListValidateBeforeCall(accountId, jobTemplateId, xPhraseAppOTP, page, perPage, null);
        Type localVarReturnType = new TypeToken<List<JobTemplateLocales>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List organization job template locales (asynchronously)
     * List all job template locales for a given organization job template.
     * @param accountId Account ID (required)
     * @param jobTemplateId Job Template ID (required)
     * @param xPhraseAppOTP Two-Factor-Authentication token (optional) (optional)
     * @param page Page number (optional)
     * @param perPage Limit on the number of objects to be returned, between 1 and 100. 25 by default (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  * Link -  <br>  * Pagination -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Rate Limiting </td><td>  * X-Rate-Limit-Limit -  <br>  * X-Rate-Limit-Remaining -  <br>  * X-Rate-Limit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call organizationJobTemplateLocalesListAsync(String accountId, String jobTemplateId, String xPhraseAppOTP, Integer page, Integer perPage, final ApiCallback<List<JobTemplateLocales>> _callback) throws ApiException {

        okhttp3.Call localVarCall = organizationJobTemplateLocalesListValidateBeforeCall(accountId, jobTemplateId, xPhraseAppOTP, page, perPage, _callback);
        Type localVarReturnType = new TypeToken<List<JobTemplateLocales>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}

/*
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.phrase.client.api;

import com.phrase.client.ApiException;
import com.phrase.client.model.Project;
import com.phrase.client.model.ProjectCreateParameters;
import com.phrase.client.model.ProjectDetails;
import com.phrase.client.model.ProjectUpdateParameters;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Ignore
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    
    /**
     * Create a project
     *
     * Create a new project.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void projectCreateTest() throws ApiException {
        ProjectCreateParameters projectCreateParameters = null;
        String xPhraseAppOTP = null;
        ProjectDetails response = api.projectCreate(projectCreateParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * Delete a project
     *
     * Delete an existing project.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void projectDeleteTest() throws ApiException {
        String id = null;
        String xPhraseAppOTP = null;
        api.projectDelete(id, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * Get a single project
     *
     * Get details on a single project.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void projectShowTest() throws ApiException {
        String id = null;
        String xPhraseAppOTP = null;
        ProjectDetails response = api.projectShow(id, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * Update a project
     *
     * Update an existing project.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void projectUpdateTest() throws ApiException {
        String id = null;
        ProjectUpdateParameters projectUpdateParameters = null;
        String xPhraseAppOTP = null;
        ProjectDetails response = api.projectUpdate(id, projectUpdateParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * List projects
     *
     * List all projects the current user has access to.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void projectsListTest() throws ApiException {
        String xPhraseAppOTP = null;
        Integer page = null;
        Integer perPage = null;
        String accountId = null;
        String sortBy = null;
        List<String> filters = null;
        List<Project> response = api.projectsList(xPhraseAppOTP, page, perPage, accountId, sortBy, filters);

        // TODO: test validations
    }
    
}

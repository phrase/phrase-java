/*
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.phrase.client.api;

import com.phrase.client.ApiException;
import com.phrase.client.model.Webhook;
import com.phrase.client.model.WebhookCreateParameters;
import com.phrase.client.model.WebhookUpdateParameters;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhooksApi
 */
@Ignore
public class WebhooksApiTest {

    private final WebhooksApi api = new WebhooksApi();

    
    /**
     * Create a webhook
     *
     * Create a new webhook.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void webhookCreateTest() throws ApiException {
        String projectId = null;
        WebhookCreateParameters webhookCreateParameters = null;
        String xPhraseAppOTP = null;
        Webhook response = api.webhookCreate(projectId, webhookCreateParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * Delete a webhook
     *
     * Delete an existing webhook.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void webhookDeleteTest() throws ApiException {
        String projectId = null;
        String id = null;
        String xPhraseAppOTP = null;
        api.webhookDelete(projectId, id, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * Get a single webhook
     *
     * Get details on a single webhook.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void webhookShowTest() throws ApiException {
        String projectId = null;
        String id = null;
        String xPhraseAppOTP = null;
        Webhook response = api.webhookShow(projectId, id, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * Test a webhook
     *
     * Perform a test request for a webhook.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void webhookTestTest() throws ApiException {
        String projectId = null;
        String id = null;
        String xPhraseAppOTP = null;
        api.webhookTest(projectId, id, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * Update a webhook
     *
     * Update an existing webhook.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void webhookUpdateTest() throws ApiException {
        String projectId = null;
        String id = null;
        WebhookUpdateParameters webhookUpdateParameters = null;
        String xPhraseAppOTP = null;
        Webhook response = api.webhookUpdate(projectId, id, webhookUpdateParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * List webhooks
     *
     * List all webhooks for the given project.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void webhooksListTest() throws ApiException {
        String projectId = null;
        String xPhraseAppOTP = null;
        Integer page = null;
        Integer perPage = null;
        List<Webhook> response = api.webhooksList(projectId, xPhraseAppOTP, page, perPage);

        // TODO: test validations
    }
    
}

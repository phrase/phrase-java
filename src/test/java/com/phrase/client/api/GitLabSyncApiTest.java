/*
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.phrase.client.api;

import com.phrase.client.ApiException;
import com.phrase.client.model.GitlabSync;
import com.phrase.client.model.GitlabSyncExport;
import com.phrase.client.model.GitlabSyncExportParameters;
import com.phrase.client.model.GitlabSyncHistory;
import com.phrase.client.model.GitlabSyncImportParameters;
import com.phrase.client.model.Upload;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GitLabSyncApi
 */
@Ignore
public class GitLabSyncApiTest {

    private final GitLabSyncApi api = new GitLabSyncApi();

    
    /**
     * Delete single Sync Setting
     *
     * Deletes a single GitLab Sync Setting.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gitlabSyncDeleteTest() throws ApiException {
        String id = null;
        String xPhraseAppOTP = null;
        String accountId = null;
        api.gitlabSyncDelete(id, xPhraseAppOTP, accountId);

        // TODO: test validations
    }
    
    /**
     * Export from Phrase Strings to GitLab
     *
     * Export translations from Phrase Strings to GitLab according to the .phraseapp.yml file within the GitLab repository. &lt;br&gt;&lt;br&gt;&lt;i&gt;Note: Export is done asynchronously and may take several seconds depending on the project size.&lt;/i&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gitlabSyncExportTest() throws ApiException {
        String gitlabSyncId = null;
        GitlabSyncExportParameters gitlabSyncExportParameters = null;
        String xPhraseAppOTP = null;
        GitlabSyncExport response = api.gitlabSyncExport(gitlabSyncId, gitlabSyncExportParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * History of single Sync Setting
     *
     * List history for a single Sync Setting.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gitlabSyncHistoryTest() throws ApiException {
        String gitlabSyncId = null;
        String xPhraseAppOTP = null;
        Integer page = null;
        Integer perPage = null;
        String accountId = null;
        List<GitlabSyncHistory> response = api.gitlabSyncHistory(gitlabSyncId, xPhraseAppOTP, page, perPage, accountId);

        // TODO: test validations
    }
    
    /**
     * Import from GitLab to Phrase
     *
     * Import translations from GitLab to Phrase Strings according to the .phraseapp.yml file within the GitLab repository. &lt;br&gt;&lt;br&gt;&lt;i&gt;Note: Import is done asynchronously and may take several seconds depending on the project size.&lt;/i&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gitlabSyncImportTest() throws ApiException {
        String gitlabSyncId = null;
        GitlabSyncImportParameters gitlabSyncImportParameters = null;
        String xPhraseAppOTP = null;
        List<Upload> response = api.gitlabSyncImport(gitlabSyncId, gitlabSyncImportParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * List GitLab syncs
     *
     * List all GitLab Sync Settings for which synchronisation with Phrase Strings and GitLab is activated.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gitlabSyncListTest() throws ApiException {
        String xPhraseAppOTP = null;
        String accountId = null;
        List<GitlabSync> response = api.gitlabSyncList(xPhraseAppOTP, accountId);

        // TODO: test validations
    }
    
    /**
     * Get single Sync Setting
     *
     * Shows a single GitLab Sync Setting.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gitlabSyncShowTest() throws ApiException {
        String id = null;
        String xPhraseAppOTP = null;
        String accountId = null;
        GitlabSync response = api.gitlabSyncShow(id, xPhraseAppOTP, accountId);

        // TODO: test validations
    }
    
    /**
     * Update single Sync Setting
     *
     * Updates a single GitLab Sync Setting.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gitlabSyncUpdateTest() throws ApiException {
        String id = null;
        String xPhraseAppOTP = null;
        String accountId = null;
        String phraseProjectCode = null;
        Integer gitlabProjectId = null;
        String gitlabBranchName = null;
        GitlabSync response = api.gitlabSyncUpdate(id, xPhraseAppOTP, accountId, phraseProjectCode, gitlabProjectId, gitlabBranchName);

        // TODO: test validations
    }
    
}

/*
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.phrase.client.api;

import com.phrase.client.ApiException;
import com.phrase.client.model.JobComment;
import com.phrase.client.model.JobCommentCreateParameters;
import com.phrase.client.model.JobCommentUpdateParameters;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobCommentsApi
 */
@Ignore
public class JobCommentsApiTest {

    private final JobCommentsApi api = new JobCommentsApi();

    
    /**
     * Create a job comment
     *
     * Create a new comment for a job.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobCommentCreateTest() throws ApiException {
        String projectId = null;
        String jobId = null;
        JobCommentCreateParameters jobCommentCreateParameters = null;
        String xPhraseAppOTP = null;
        JobComment response = api.jobCommentCreate(projectId, jobId, jobCommentCreateParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * Delete a job comment
     *
     * Delete an existing job comment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobCommentDeleteTest() throws ApiException {
        String projectId = null;
        String jobId = null;
        String id = null;
        String xPhraseAppOTP = null;
        String branch = null;
        api.jobCommentDelete(projectId, jobId, id, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
    /**
     * Get a single job comment
     *
     * Get details on a single job comment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobCommentShowTest() throws ApiException {
        String projectId = null;
        String jobId = null;
        String id = null;
        String xPhraseAppOTP = null;
        String branch = null;
        Object response = api.jobCommentShow(projectId, jobId, id, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
    /**
     * Update a job comment
     *
     * Update an existing job comment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobCommentUpdateTest() throws ApiException {
        String projectId = null;
        String keyId = null;
        String id = null;
        JobCommentUpdateParameters jobCommentUpdateParameters = null;
        String xPhraseAppOTP = null;
        Object response = api.jobCommentUpdate(projectId, keyId, id, jobCommentUpdateParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * List job comments
     *
     * List all comments for a job.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobCommentsListTest() throws ApiException {
        String projectId = null;
        String jobId = null;
        String xPhraseAppOTP = null;
        String branch = null;
        List<Object> response = api.jobCommentsList(projectId, jobId, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
}

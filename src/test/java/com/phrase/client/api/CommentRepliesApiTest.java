/*
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.phrase.client.api;

import com.phrase.client.ApiException;
import com.phrase.client.model.Comment;
import com.phrase.client.model.RepliesListParameters;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CommentRepliesApi
 */
@Ignore
public class CommentRepliesApiTest {

    private final CommentRepliesApi api = new CommentRepliesApi();

    
    /**
     * List replies
     *
     * List all replies for a comment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void repliesListTest() throws ApiException {
        String projectId = null;
        String keyId = null;
        String commentId = null;
        RepliesListParameters repliesListParameters = null;
        String xPhraseAppOTP = null;
        Integer page = null;
        Integer perPage = null;
        String branch = null;
        String query = null;
        List<String> filters = null;
        String order = null;
        List<Comment> response = api.repliesList(projectId, keyId, commentId, repliesListParameters, xPhraseAppOTP, page, perPage, branch, query, filters, order);

        // TODO: test validations
    }
    
    /**
     * Create a reply
     *
     * Create a new reply for a comment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replyCreateTest() throws ApiException {
        String projectId = null;
        String keyId = null;
        String commentId = null;
        String xPhraseAppOTP = null;
        String branch = null;
        String message = null;
        Comment response = api.replyCreate(projectId, keyId, commentId, xPhraseAppOTP, branch, message);

        // TODO: test validations
    }
    
    /**
     * Delete a reply
     *
     * Delete an existing reply.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replyDeleteTest() throws ApiException {
        String projectId = null;
        String keyId = null;
        String commentId = null;
        String id = null;
        String xPhraseAppOTP = null;
        String branch = null;
        api.replyDelete(projectId, keyId, commentId, id, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
    /**
     * Mark a reply as read
     *
     * Mark a reply as read.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replyMarkAsReadTest() throws ApiException {
        String projectId = null;
        String keyId = null;
        String commentId = null;
        String id = null;
        String xPhraseAppOTP = null;
        String branch = null;
        api.replyMarkAsRead(projectId, keyId, commentId, id, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
    /**
     * Mark a reply as unread
     *
     * Mark a reply as unread.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replyMarkAsUnreadTest() throws ApiException {
        String projectId = null;
        String keyId = null;
        String commentId = null;
        String id = null;
        String xPhraseAppOTP = null;
        String branch = null;
        api.replyMarkAsUnread(projectId, keyId, commentId, id, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
    /**
     * Get a single reply
     *
     * Get details on a single reply.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replyShowTest() throws ApiException {
        String projectId = null;
        String keyId = null;
        String commentId = null;
        String id = null;
        String xPhraseAppOTP = null;
        String branch = null;
        Comment response = api.replyShow(projectId, keyId, commentId, id, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
}

/*
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.phrase.client.api;

import com.phrase.client.ApiException;
import com.phrase.client.model.JobAnnotation;
import com.phrase.client.model.JobAnnotationUpdateParameters;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobAnnotationsApi
 */
@Ignore
public class JobAnnotationsApiTest {

    private final JobAnnotationsApi api = new JobAnnotationsApi();

    
    /**
     * Delete a job annotation
     *
     * Delete an annotation for a job.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobAnnotationDeleteTest() throws ApiException {
        String projectId = null;
        String jobId = null;
        String id = null;
        String xPhraseAppOTP = null;
        String branch = null;
        api.jobAnnotationDelete(projectId, jobId, id, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
    /**
     * Create/Update a job annotation
     *
     * Create or update an annotation for a job. If the annotation already exists, it will be updated; otherwise, a new annotation will be created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobAnnotationUpdateTest() throws ApiException {
        String projectId = null;
        String jobId = null;
        String id = null;
        JobAnnotationUpdateParameters jobAnnotationUpdateParameters = null;
        String xPhraseAppOTP = null;
        JobAnnotation response = api.jobAnnotationUpdate(projectId, jobId, id, jobAnnotationUpdateParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * List job annotations
     *
     * Retrieve a list of annotations for a job.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobAnnotationsListTest() throws ApiException {
        String projectId = null;
        String jobId = null;
        String xPhraseAppOTP = null;
        String branch = null;
        List<JobAnnotation> response = api.jobAnnotationsList(projectId, jobId, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
    /**
     * Delete a job locale annotation
     *
     * Delete an annotation for a job locale.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobLocaleAnnotationDeleteTest() throws ApiException {
        String projectId = null;
        String jobId = null;
        String jobLocaleId = null;
        String id = null;
        String xPhraseAppOTP = null;
        String branch = null;
        api.jobLocaleAnnotationDelete(projectId, jobId, jobLocaleId, id, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
    /**
     * Create/Update a job locale annotation
     *
     * Create or update an annotation for a job locale. If the annotation already exists, it will be updated; otherwise, a new annotation will be created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobLocaleAnnotationUpdateTest() throws ApiException {
        String projectId = null;
        String jobId = null;
        String jobLocaleId = null;
        String id = null;
        JobAnnotationUpdateParameters jobAnnotationUpdateParameters = null;
        String xPhraseAppOTP = null;
        JobAnnotation response = api.jobLocaleAnnotationUpdate(projectId, jobId, jobLocaleId, id, jobAnnotationUpdateParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * List job locale annotations
     *
     * Retrieve a list of annotations for a job locale.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobLocaleAnnotationsListTest() throws ApiException {
        String projectId = null;
        String jobId = null;
        String jobLocaleId = null;
        String xPhraseAppOTP = null;
        String branch = null;
        List<JobAnnotation> response = api.jobLocaleAnnotationsList(projectId, jobId, jobLocaleId, xPhraseAppOTP, branch);

        // TODO: test validations
    }
    
}

/*
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.phrase.client.api;

import com.phrase.client.ApiException;
import com.phrase.client.model.CustomMetadataPropertyCreate422Response;
import com.phrase.client.model.KeyLink;
import com.phrase.client.model.KeyLinksBatchDestroyParameters;
import com.phrase.client.model.KeyLinksCreateParameters;
import com.phrase.client.model.KeyLinksIndex400Response;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LinkedKeysApi
 */
@Ignore
public class LinkedKeysApiTest {

    private final LinkedKeysApi api = new LinkedKeysApi();

    
    /**
     * Batch unlink child keys from a parent key
     *
     * Unlinks multiple child keys from a given parent key in a single operation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void keyLinksBatchDestroyTest() throws ApiException {
        String projectId = null;
        String id = null;
        KeyLinksBatchDestroyParameters keyLinksBatchDestroyParameters = null;
        String xPhraseAppOTP = null;
        api.keyLinksBatchDestroy(projectId, id, keyLinksBatchDestroyParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * Link child keys to a parent key
     *
     * Creates links between a given parent key and one or more child keys.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void keyLinksCreateTest() throws ApiException {
        String projectId = null;
        String id = null;
        KeyLinksCreateParameters keyLinksCreateParameters = null;
        String xPhraseAppOTP = null;
        KeyLink response = api.keyLinksCreate(projectId, id, keyLinksCreateParameters, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * Unlink a child key from a parent key
     *
     * Unlinks a single child key from a given parent key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void keyLinksDestroyTest() throws ApiException {
        String projectId = null;
        String id = null;
        String childKeyId = null;
        String xPhraseAppOTP = null;
        api.keyLinksDestroy(projectId, id, childKeyId, xPhraseAppOTP);

        // TODO: test validations
    }
    
    /**
     * List child keys of a parent key
     *
     * Returns detailed information about a parent key, including its linked child keys.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void keyLinksIndexTest() throws ApiException {
        String projectId = null;
        String id = null;
        String xPhraseAppOTP = null;
        KeyLink response = api.keyLinksIndex(projectId, id, xPhraseAppOTP);

        // TODO: test validations
    }
    
}

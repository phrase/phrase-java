/*
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.phrase.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.File;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for UploadCreateParameters
 */
public class UploadCreateParametersTest {
    private final UploadCreateParameters model = new UploadCreateParameters();

    /**
     * Model tests for UploadCreateParameters
     */
    @Test
    public void testUploadCreateParameters() {
        // TODO: test UploadCreateParameters
    }

    /**
     * Test the property 'branch'
     */
    @Test
    public void branchTest() {
        // TODO: test branch
    }

    /**
     * Test the property 'file'
     */
    @Test
    public void fileTest() {
        // TODO: test file
    }

    /**
     * Test the property 'fileFormat'
     */
    @Test
    public void fileFormatTest() {
        // TODO: test fileFormat
    }

    /**
     * Test the property 'localeId'
     */
    @Test
    public void localeIdTest() {
        // TODO: test localeId
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'updateTranslations'
     */
    @Test
    public void updateTranslationsTest() {
        // TODO: test updateTranslations
    }

    /**
     * Test the property 'updateDescriptions'
     */
    @Test
    public void updateDescriptionsTest() {
        // TODO: test updateDescriptions
    }

    /**
     * Test the property 'convertEmoji'
     */
    @Test
    public void convertEmojiTest() {
        // TODO: test convertEmoji
    }

    /**
     * Test the property 'skipUploadTags'
     */
    @Test
    public void skipUploadTagsTest() {
        // TODO: test skipUploadTags
    }

    /**
     * Test the property 'skipUnverification'
     */
    @Test
    public void skipUnverificationTest() {
        // TODO: test skipUnverification
    }

    /**
     * Test the property 'fileEncoding'
     */
    @Test
    public void fileEncodingTest() {
        // TODO: test fileEncoding
    }

    /**
     * Test the property 'localeMapping'
     */
    @Test
    public void localeMappingTest() {
        // TODO: test localeMapping
    }

    /**
     * Test the property 'formatOptions'
     */
    @Test
    public void formatOptionsTest() {
        // TODO: test formatOptions
    }

    /**
     * Test the property 'autotranslate'
     */
    @Test
    public void autotranslateTest() {
        // TODO: test autotranslate
    }

    /**
     * Test the property 'markReviewed'
     */
    @Test
    public void markReviewedTest() {
        // TODO: test markReviewed
    }

}
